# [START cloudbuild-delivery]
steps:
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - Dockerfile
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _TRIGGER_ID: c6de3b17-7d0e-4151-88c3-d0c3aab2fe8a
  _SERVICE_NAME: acg-resume-api-prod-artifact
  _DEPLOY_REGION: us-east4
  _GCR_HOSTNAME: us.gcr.io
  _PLATFORM: managed
  _LABELS: gcb-trigger-id=c6de3b17-7d0e-4151-88c3-d0c3aab2fe8a
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - acg-resume-api-prod-artifact
# This step copies the applied manifest to the production branch
# The COMMIT_SHA variable is automatically
# replaced by Cloud Build.
  - name: 'gcr.io/cloud-builders/git'
    id: Copy to production branch
    entrypoint: /bin/sh
    args:
    - '-c'
    - |
      set -x && \
      # Configure Git to create commits with Cloud Build's service account
      git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
      # Switch to the production branch and copy the files from the candidate branch
      git fetch origin production && git checkout production && \
      git checkout $COMMIT_SHA . && \
      # Commit the files with a descriptive commit message
      git commit -m "Manifest from commit $COMMIT_SHA
      $(git log --format=%B -n 1 $COMMIT_SHA)" && \
      # Push the changes back to Cloud Source Repository
      git push origin production
# [END cloudbuild-delivery]